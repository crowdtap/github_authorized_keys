require 'spec_helper'

describe GithubAuthorizedKeys::CLI do
  before do
    @config = { 'organization' => 'some-org', 'oauth_token' => 'token' }
    subject.stub(:load_config)
    subject.stub(:fetch_members => [
      {'login'=>'first'},
      {'login'=>'second'},
      {'login'=>'third'}
    ])
    subject.stub(:fetch_keys).and_return(
      [{'key' => 'ssh-rsa 1'}],
      [{'key' => 'ssh-rsa 2'}],
      [{'key' => 'ssh-rsa 3'},{'key' => 'ssh-rsa 4'}]
    )
  end

  it "will spit out the original authorized_keys file on error" do
    subject.stub(:read_original_authorized_keys => 'original authorized keys')
    subject.run('nonexistant').should == 'original authorized keys'
  end

  it "is ok that there were no provided additional keys" do
    subject.stub(:config => @config)
    expected = [
      '### THIS FILE IS AUTOMATICALLY GENERATED',
      '# first',  'ssh-rsa 1',
      '# second', 'ssh-rsa 2',
      '# third',  'ssh-rsa 3', 'ssh-rsa 4'
    ].join('\n')

    subject.run.should == expected
  end

  it "generates a proper authorized_keys file" do
    @config.merge!({'additional_keys'=>['ssh-rsa a','ssh-rsa b']})
    subject.stub(:config => @config)
    expected = [
      '### THIS FILE IS AUTOMATICALLY GENERATED',
      'ssh-rsa a', 'ssh-rsa b',
      '# first',  'ssh-rsa 1',
      '# second', 'ssh-rsa 2',
      '# third',  'ssh-rsa 3', 'ssh-rsa 4'
    ].join('\n')

    subject.run.should == expected
  end
end
